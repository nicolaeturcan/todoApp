{"name":"angular-tree-table","tagline":"[Angular 1.x (no need jQuery)] Display tree table & event DrapnDrop, field 'td' by tree (other normal)","body":"# angular-tree-dnd\r\n[Angular 1.x] Display tree dnd &amp; event DrapnDrop, field 'td' by tree (other normal) - without jQuery.\r\n## Current Version\r\n[![GitHub version](https://badge.fury.io/gh/thienhung1989%2Fangular-tree-dnd.svg)](http://badge.fury.io/gh/thienhung1989%2Fangular-tree-dnd)\r\n\r\n## Demo: \r\n- http://thienhung1989.github.io/angular-tree-dnd/demo\r\n- http://plnkr.co/edit/6zQNvW?p=preview\r\n\r\n\r\n## Install bower:\r\n```js\r\nbower angular-tree-dnd install\r\n```\r\n\r\n* Function 'filter' & 'group by' not add in ng-repeate (it's slow & incompatible with $id($$hash) )\r\n* Able add function to tree-dnd by:\r\n\t* Example: *(See on Demo 2)*\r\n```js\r\n\t$scope.my_tree.addFunction = function(b){\r\n\t  console.log(b);\r\n\t  alert('Function added in Controller \"App.js\"');\r\n\t}\r\n```\r\n\t\t* Call function: *(tree.remove_node extended see below with function other)*\r\n```js\r\n              $scope.col_defs = [\r\n                    {\r\n                        field: \"Description\"\r\n                    }, {\r\n                        displayName:  'Function',\r\n                        cellTemplate: '<button ng-click=\"tree.addFunction(node)\" class=\"btn btn-default btn-sm\">Added Controller!</button>'\r\n                    }, {\r\n                        displayName:  'Remove',\r\n                        cellTemplate: '<button ng-click=\"tree.remove_node(node)\" class=\"btn btn-default btn-sm\">Remove</button>'\r\n                    }];\r\n```\r\n\r\n* Functions extended in callback (able change by attribute):\r\n```js\r\n$scope.$callbacks = {\r\n\t// function accept called when item Drapping move-over target\r\n\taccept:      function (scopeDrag, scopeTarget, align) {\r\n\t\treturn true;\r\n\t},\r\n\t\r\n\tbeforeDrag:  function (scopeDrag) {\r\n\t\treturn true;\r\n\t},\r\n\tdropped:     function (info, accepted) {\r\n\t\treturn false;\r\n\t},\r\n\tdragStart:   function (event) {},\r\n\tdragMove:    function (event) {},\r\n\tdragStop:    function (event, skiped) {},\r\n\tbeforeDrop:  function (event) {\r\n\t\treturn true;\r\n\t},\r\n\tcalsIndent:  function (level) {\r\n\t\tif (level - 1 < 1) {\r\n\t\t\treturn $scope.indent_plus + ($scope.indent_unit ? $scope.indent_unit : 'px');\r\n\t\t} else {\r\n\t\t\treturn ($scope.indent * (level - 1)) + $scope.indent_plus + ($scope.indent_unit ? $scope.indent_unit : 'px');\r\n\t\t}\r\n\t},\r\n\tdragEnabled: function () {\r\n\t\treturn $scope.dragEnabled;\r\n\t}\r\n};\r\n```\r\n* Functions extended in control (attribute 'tree-control'):\r\n```html\r\n\ttree.expand_all();\r\n\ttree.collapse_all();\r\n\ttree.select_first_node();\r\n\ttree.select_node(node);\r\n\ttree.add_node(parent, new_node, index);\r\n\ttree.add_root_node(new_node);\r\n\ttree.remove_node(node);\r\n\ttree.expand_node(node);\r\n\ttree.collapse_node(node);\r\n\ttree.get_selected_node();\r\n\ttree.get_first_child(node);\r\n\ttree.get_children(node);\r\n\ttree.get_first_node();\r\n\ttree.get_next_node(node);\r\n\ttree.get_prev_node(node);\r\n\ttree.get_parent_node(node);\r\n\ttree.get_siblings(node);\r\n\ttree.get_next_sibling(node);\r\n\ttree.get_prev_sibling(node);\r\n\ttree.get_closest_ancestor_next_sibling(node);\r\n\ttree.select_next_node(node);\r\n\ttree.select_next_sibling(node);\r\n\ttree.select_prev_sibling(node);\r\n\ttree.select_parent_node(node);\r\n\ttree.last_descendant(node);\r\n\ttree.select_prev_node(node);\r\n```\r\n\r\n* Example\r\n**init:\r\n```html\r\n <tree-dnd\r\n        class=\"dnd\"\r\n        tree-data=\"tree_data\"\r\n        tree-control=\"my_tree\"\r\n        callbacks=\"callbacks\"\r\n        drag-enabled=\"true\"\r\n        icon-leaf=\"none\"\r\n        icon-expand=\"fa fa-fw fa-angle-right\"\r\n        icon-collapse=\"fa fa-fw fa-angle-down\"\r\n        template-url=\"tree-dnd-template.html\"\r\n        column-defs=\"col_defs\"\r\n        expand-on=\"expanding_property\"\r\n        on-select=\"my_tree_handler(node)\"\r\n        on-click=\"my_tree_handler(node)\"\r\n        data-indent=\"30\"\r\n        data-indent-unit=\"px\"\r\n        data-indent-plus=\"15\"\r\n   >\r\n</tree-dnd>\r\n```\r\n** Template Extened:\r\n```html\r\n<script type=\"text/ng-template\" id=\"tree-dnd-template.html\">\r\n\t<div class=\"tree-dnd\">\r\n            <dnd class=\"dnd\">\r\n                <thead>\r\n                    <tr>\r\n                        <th ng-class=\"expandingProperty.titleClass\" ng-style=\"expandingProperty.titleStyle\">\r\n                            {{expandingProperty.displayName || expandingProperty.field || expandingProperty}}\r\n                        </th>\r\n                        <th ng-repeat=\"col in colDefinitions\" ng-class=\"col.titleClass\"\r\n                            ng-style=\"col.titleStyle\">\r\n                            {{col.displayName || col.field}}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr tree-dnd-node ng-repeat=\"node in tree_rows track by hashedTree(node)\"\r\n                        ng-show=\"node.__visible__\" ng-class=\"(node.__selected__ ? ' active':'')\"\r\n                        class=\"ng-animate \">\r\n                        <td ng-if=\"!expandingProperty.template\"\r\n                            ng-style=\"expandingProperty.cellStyle ? expandingProperty.cellStyle : {'padding-left': $callbacks.calsIndent(node.__level__)}\"\r\n                            ng-click=\"user_clicks_node(node)\" ng-class=\"expandingProperty.cellClass\"\r\n                            compile=\"expandingProperty.cellTemplate\">\r\n                        <span tree-dnd-node-handle>\r\n                            <i class=\"fa fa-sort text-muted m-r-sm\"></i>\r\n                        </span> {{node[expandingProperty.field] || node[expandingProperty]}} <a> <i\r\n                                ng-class=\"node.__tree_icon__\" ng-click=\"node.__expanded__ = !node.__expanded__\"\r\n                                class=\"tree-icon\"></i> </a>\r\n                        </td>\r\n                        <td ng-if=\"expandingProperty.template\" compile=\"expandingProperty.template\"></td>\r\n                        <td ng-repeat=\"col in colDefinitions\" ng-class=\"col.cellClass\" ng-style=\"col.cellStyle\"\r\n                            compile=\"col.cellTemplate\">\r\n                            {{node[col.field]}}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </dnd>\r\n        </div>\r\n\t<pre>{{ treeData | json }}</pre>\r\n\t<pre>{{ tree_rows | json }}</pre>\r\n</script>\r\n```\r\n## dragStop:\r\n```js\r\n    scope.$callbacks.dragStop(dragInfo, _status);\r\n```\r\n    * _status: Status changed pos of node, Drag succeed!\r\n    * dragInfo:\r\n        * node:          scope.node(), // Data node dragged\r\n        * scope:         scope, // Scope node\r\n        * level:         scope.node().__level__, // Level indent\r\n        * target:        scope.prev(), // Node prev\r\n        * move:\r\n            * parent: -1, // -1: Dragged failed, null: node root, > 0: node normal\r\n            * pos:    -1 // Position new Note moveTo\r\n    * 'dropped': re-Add function ` * re-Add function `dropped` in `$callbaks` *(used to copying or remove node old)*:\r\n       * \r\n       ```html\r\n           dropped:     function (info, pass, isMove);\r\n       ```\r\n       * With param:\r\n           * info: \r\n               * drag: Scope of Node dragging.\r\n               * tree: Scope of Node Target.\r\n               * node: Node dragging.\r\n               * parent: Parent containd Node Dragging.\r\n               * move:\r\n                   * parent: Node parent to move node dragging to.\r\n                   * pos: Position insert.\r\n               * target: Data node Target *(able skip, not important)*\r\n            * pass: bypass resutl in `$callback.beforeDrop:`.\r\n            * isMove: status Moving or Copying.` in `$callbaks` *(used to copying or remove node old)*:\r\n        * \r\n        ```html\r\n            dropped:     function (info, pass, isMove);\r\n        ```\r\n        * With param:\r\n            * info: \r\n                * drag: Scope of Node dragging.\r\n                * tree: Scope of Node Target.\r\n                * node: Node dragging.\r\n                * parent: Parent containd Node Dragging.\r\n                * move:\r\n                    * parent: Node parent to move node dragging to.\r\n                    * pos: Position insert.\r\n                * target: Data node Target *(able skip, not important)*\r\n             * pass: bypass resutl in `$callback.beforeDrop:`.\r\n             * isMove: status Moving or Copying.\r\n\r\n* Add 'data' to TreeDnDNode  `tree-dnd-node=data` in template;\r\n```html\r\n<tr tree-dnd-node=\"node\" ng-repeat=\"node in tree_rows track by hashedTree(node)\"\r\n                            ng-show=\"node.__visible__\" ng-class=\"(node.__selected__ ? ' active':'')\" class=\"ng-animate \">\r\n    ....\r\n</tr>\r\n```\r\n\r\n# Display ListTree (UL, OL)\r\n\r\n* Combinding with list-tree.\r\n\r\n```html\r\n              <script type=\"text/ng-template\" id=\"tree-dnd-template-render.html\">\r\n                    <ul tree-dnd-nodes=\"tree_data\">\r\n                        <li tree-dnd-node=\"node\" ng-repeat=\"node in datas track by node.__hashKey__\"\r\n                            ng-show=\"node.__visible__\" compile=\"expandingProperty.cellTemplate\"\r\n                            ng-include=\"'tree-dnd-template-fetch.html'\"></li>\r\n                    </ul>\r\n                </script>\r\n                \r\n                <script type=\"text/ng-template\" id=\"tree-dnd-template-fetch.html\">\r\n                    <div class=\"list-group-item\"\r\n                         ng-class=\"(node.__selected__ ? 'list-group-item-success':'')\"\r\n                         ng-click=\"onClick(node)\"\r\n                         ng-style=\"expandingProperty.cellStyle ? expandingProperty.cellStyle : {}\">\r\n\r\n                        <a class=\"btn btn-default\" aria-label=\"Justify\" type=\"button\" tree-dnd-node-handle>\r\n                            <span class=\"glyphicon glyphicon-align-justify\" aria-hidden=\"true\"></span>\r\n                        </a> \r\n                        \r\n                        {{node[expandingProperty.field] || node[expandingProperty]}}\r\n                        \r\n                        <span ng-class=\"$iconClass\" ng-click=\"toggleExpand(node)\"></span>\r\n                        <div class=\"pull-right\">\r\n                            <span ng-repeat=\"col in colDefinitions\" ng-class=\"col.cellClass\" ng-style=\"col.cellStyle\"\r\n                                  compile=\"col.cellTemplate\">\r\n                                {{node[col.field]}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <ul tree-dnd-nodes=\"node.__children__\">\r\n                        <li tree-dnd-node=\"node\" ng-repeat=\"node in datas track by node.__hashKey__\"\r\n                            ng-show=\"node.__visible__\" compile=\"expandingProperty.cellTemplate\"\r\n                            ng-include=\"'tree-dnd-template-fetch.html'\"></li>\r\n                    </ul>\r\n                </script>\r\n                \r\n                <tree-dnd tree-data=\"tree_data\"\r\n                            tree-control=\"my_tree\"\r\n                            column-defs=\"col_defs_min\"\r\n                            expand-on=\"expanding_property\"\r\n                            on-select=\"select_handler(node)\"\r\n                            on-click=\"click_handler(node)\"\r\n                            template-url=\"tree-dnd-template-render.html\"\r\n                            icon-leaf=\"none\"\r\n                            icon-expand=\"glyphicon glyphicon-chevron-down\"\r\n                            icon-collapse=\"glyphicon glyphicon-chevron-right\"\r\n                        ></tree-dnd>\r\n```\r\n\r\n\r\n## Add attributes\r\n    * `__tree_icon__` : changed to `__icon__` *(-1: leaf, 0: collect, 1: expaned)* - *(in Tree_Data)*\r\n    * Added `$iconClass` replace for `__tree_icon__` *(avoid conflict when create tree-dnd use one `tree-data`)*\r\n    * Add function:\r\n    * re-Add function `dropped` in `$callbaks` *(used to copying or remove node old)*:\r\n        * \r\n        ```html\r\n            dropped:     function (info, pass, isMove);\r\n        ```\r\n        * With param:\r\n            * info: \r\n                * drag: Scope of Node dragging.\r\n                * tree: Scope of Node Target.\r\n                * node: Node dragging.\r\n                * parent: Parent containd Node Dragging.\r\n                * move:\r\n                    * parent: Node parent to move node dragging to.\r\n                    * pos: Position insert.\r\n                * target: Data node Target *(able skip, not important)*\r\n             * pass: bypass resutl in `$callback.beforeDrop:`.\r\n             * isMove: status Moving or Copying.\r\n    * 'onSelect': Select and callback function `on-select` *(created in `directive`)*\r\n    * 'onClick': callback function `on-click`. *(created in `directive`)*\r\n    * 'column-defs': `null` will auto get colDefinitions *(sample with `empty`)*.\r\n    * 'enable-move': `true`: To move node, `false`: to copy node *(default `true`)*\r\n    * 'enable-hotkey': `true`: press 'shift' to move node, unpress 'shift' to copy node. *(default `false`)*\r\n    * 'enable-drag': to Enable-drag *(default `true`)*\r\n    * 'enable-status': to show status moving, copying *(default `false`)*\r\n    * 'template-copy': to add url template of `Status Copy` *(can bypass string or variable in controller, but just only get $templateCache, if not exist will get default)*;\r\n    * 'template-move': to add url template of `Status Move` *(can bypass string or variable in controller, but just only get $templateCache, if not exist will get default)*;\r\n    * Example:\r\n```html\r\n<tree-dnd class=\"tree-dnd dnd dnd-hover b-b b-light\" tree-data=\"tree_data\" tree-control=\"my_tree\"\r\n    primary-key=\"primaryKey\" \r\n    callbacks=\"callbacks\" \r\n    \r\n    enable-drag=\"true\"\r\n    enable-status=\"true\" \r\n    enable-move=\"true\" \r\n    icon-leaf=\"none\" \r\n    icon-expand=\"fa fa-fw fa-angle-right\"\r\n    icon-collapse=\"fa fa-fw fa-angle-down\" \r\n    \r\n    column-defs=\"col_defs\" \r\n    expand-on=\"expanding_property\"\r\n    \r\n    \r\n    on-select=\"select_handler()\"\r\n    on-click=\"click_handler()\"\r\n    \r\n    template-url=\"tree-dnd-template.html\" \r\n    template-move=\"'tree-dnd-template.html'\"\r\n    template-copy=\"tree-dnd-template.html\"\r\n\r\n    data-indent=\"30\"\r\n    data-indent-unit=\"px\"\r\n    data-indent-plus=\"15\"\r\n    \r\n></tree-dnd>\r\n\r\n```\r\n\r\n## Thank To:\r\n\r\nThis product is the combination and optimization of 2: [![angular-ui-tree](https://github.com/angular-ui-tree/angular-ui-tree)](https://github.com/angular-ui-tree/angular-ui-tree)  (Drag2Drop) và [![tree-grid-directive](https://github.com/khan4019/tree-grid-directive)](https://github.com/khan4019/tree-grid-directive) (Display Tree2Table).\r\n","google":"UA-62693282-1","note":"Don't delete this file! It's used internally to help with page regeneration."}